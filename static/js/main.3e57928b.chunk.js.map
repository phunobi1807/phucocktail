{"version":3,"sources":["api/CallCoctail.js","App.js","reportWebVitals.js","index.js"],"names":["CallCoctail","state","listCoctail","name","loading","handleChange","e","setState","target","value","handleSubmit","fetchingCoctail","a","this","axios","get","res","console","log","data","drinks","className","map","item","index","idDrink","strDrink","src","strImageSource","alt","id","type","onChange","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAGaA,EAAb,4MAQIC,MAAQ,CACLC,YAAa,GACbC,KAAM,YAENC,SAAS,GAZhB,EAgBIC,aAAe,SAACC,GAEZ,EAAKC,SAAS,CACVJ,KAAMG,EAAEE,OAAOC,SAnB3B,EAiCIC,aAAe,WACX,EAAKC,mBAlCb,4FAuBI,4BAAAC,EAAA,6DACIC,KAAKN,SAAS,CAACH,SAAS,IAD5B,SAEoBU,IAAMC,IAAN,mEAAsEF,KAAKZ,MAAME,OAFrG,OAEQa,EAFR,OAGIC,QAAQC,IAAI,IAAKF,EAAIG,KAAKC,QAC1BP,KAAKN,SAAS,CACVL,YAAac,GAAOA,EAAIG,MAAQH,EAAIG,KAAKC,OAASJ,EAAIG,KAAKC,OAAS,GACpEhB,SAAS,IANjB,gDAvBJ,4HAsCI,sBAAAQ,EAAA,sDACGC,KAAKF,kBADR,gDAtCJ,0EA0CI,WAAU,IAAD,OACL,EAA6BE,KAAKZ,MAA7BC,EAAL,EAAKA,YAAaE,EAAlB,EAAkBA,QAClB,OACI,gCACI,sBAAKiB,UAAU,YAAf,+BAA8CR,KAAKZ,MAAME,QACtDC,EASM,6CARLF,EAAYoB,KAAI,SAACC,EAAKC,GAClB,OACI,sBAAKH,UAAU,gBAAf,UACI,8CAAiBE,EAAKE,WACtB,8CAAiBF,EAAKG,YACtB,qBAAKC,IAAKJ,EAAKK,eAAgBC,IAAI,OAHHN,EAAKO,OAQpD,uBAAOC,KAAK,OAAQC,SAAU,SAAC1B,GAAD,OAAK,EAAKD,aAAaC,MACrD,uBAAOyB,KAAK,SAASE,QAAS,kBAAI,EAAKvB,gBAAgBD,MAAM,kBA3D9E,GAAiCyB,aAiElBlC,ICrDAmC,MAVf,WAEE,OACE,sBAAKd,UAAU,MAAf,wBAEC,cAAC,EAAD,QCEUe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3e57928b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport class CallCoctail extends Component {\r\n\r\n    // Trường hợp muốn thêm tải trang khi lấy dữ liệu có thể làm như thế này\r\n    // 1. Tạo một state loading , có giá trị mặc định là false\r\n    // 2. Trước khi gọi API, settate loading = true\r\n    // 3. Sau khi gọi api setLoading đó bằng false\r\n    // 4. Dựa vào state đó, xây dựng giao diện loading\r\n    \r\n    state = {\r\n       listCoctail: [],\r\n       name: \"margarita\",\r\n\r\n       loading: false\r\n    }\r\n\r\n    // Các hàm phải cách nhau 1 \r\n    handleChange = (e) =>{\r\n        // Khi viết code không nên bỏ tróng các dòng \r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    async fetchingCoctail() {\r\n        this.setState({loading: true})\r\n        let res = await axios.get(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${this.state.name}`);\r\n        console.log(\"a\", res.data.drinks)\r\n        this.setState({\r\n            listCoctail: res && res.data && res.data.drinks ? res.data.drinks : [],\r\n            loading: false,\r\n        });\r\n    }\r\n\r\n    handleSubmit = ()=>{\r\n        this.fetchingCoctail();\r\n    }\r\n\r\n    // Các life cycle nên đặt dưới các function để tránh nhầm \r\n    async componentDidMount(){\r\n       this.fetchingCoctail(); \r\n    }\r\n\r\n    render() {\r\n        let {listCoctail, loading} = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"container\">day la cua input: {this.state.name}</div>\r\n                { !loading ?\r\n                    listCoctail.map((item,index)=>{\r\n                        return(\r\n                            <div className=\"child-coctail\" key={item.id}>\r\n                                <p>Ten san pham:{item.idDrink}</p>\r\n                                <p>Gia san pham:{item.strDrink}</p>\r\n                                <img src={item.strImageSource} alt=\"\" />\r\n                            </div>\r\n                        )\r\n                    }) : <div>Loading...</div>\r\n                }\r\n                 <input type=\"text\"  onChange={(e)=>this.handleChange(e)}/>  \r\n                 <input type=\"button\" onClick={()=>this.handleSubmit()} value=\"submit\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CallCoctail;\r\n","// import logo from './logo.svg';\nimport './App.css';\n// import axios from 'axios';\nimport CallCoctail from './api/CallCoctail';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      Hello world\n     <CallCoctail />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}